{"version":3,"file":"component---src-pages-index-js-cc4be9c40d4f5801c67d.js","mappings":"sNAEO,SAASA,IACZ,OAAO,UAAoBC,GAC/B,C,uECDO,MAAMC,GAAQ,SAAuB,SAAqBC,EAAOC,GACpE,MAAMC,EAAQ,IAAI,QAAaF,EAAOC,EAAQE,kBAC9C,OAAO,OAAoBD,EAAOD,EACtC,IAAG,SAA2BG,EAASH,GAAS,SAAEI,GAAaC,IAC3D,IAAAC,YAAU,WACN,MAAM,SAAEC,GAAcJ,EACtB,SAASK,EAAYC,GACbA,EAAMR,QAAUM,IAChBA,EAASG,SACTL,GAAQ,GAEhB,CACA,SAASM,EAAaF,GACdA,EAAMR,QAAUM,GAChBF,GAAQ,EAEhB,CAeA,OAdAL,EAAQH,IAAIe,GAAG,CACXC,UAAWL,EACXM,WAAYH,IAEgB,MAA5BX,EAAQE,kBAEQ,MAAZE,GACAG,EAASQ,UAAUX,GAEvBG,EAASS,OAAOhB,EAAQH,MAGxBG,EAAQE,iBAAiBe,UAAUV,GAEhC,WACHP,EAAQH,IAAIqB,IAAI,CACZL,UAAWL,EACXM,WAAYH,IAEhBX,EAAQE,kBAAkBiB,cAC1BnB,EAAQH,IAAIuB,YAAYb,EAC5B,CACJ,GAAG,CACCJ,EACAH,EACAK,EACAD,GAER,I,wBCuBA,MA5DiB,WAEf,SAASiB,IACP,MAAM,EAACjB,EAAS,EAACkB,IAAeC,EAAAA,EAAAA,UAAS,OACnC,EAACC,EAAK,EAACC,IAAWF,EAAAA,EAAAA,UAAS,IAE3B1B,EAAMD,IAaZ,OAXAU,EAAAA,EAAAA,YAAU,KACRT,EAAI6B,SAASd,GAAG,iBAAiB,SAAUe,GACzCL,EAAYK,EAAEC,QACd/B,EAAIgC,MAAMF,EAAEC,OAAQ/B,EAAIiC,WACxB,MAAMC,EAASJ,EAAEK,SACFC,IAAAA,OAASN,EAAEC,OAAQG,GAC3BG,MAAMrC,GACb4B,EAAQE,EAAEQ,OAAOC,eAAeC,MAAM,KACxC,GAAE,GACD,CAACxC,IAEgB,OAAbO,EAAoB,KACzBkC,EAAAA,cAACC,EAAAA,EAAM,CAACnC,SAAUA,GAGtB,CAEA,OACEkC,EAAAA,cAACE,EAAAA,EAAY,CACXC,MAAO,CAAEC,OAAQ,SACjBC,OAAQ,CAAC,QAAS,QAClBC,KAAM,GACNC,iBAAiB,GAEjBP,EAAAA,cAACjB,EAAc,MACfiB,EAAAA,cAACQ,EAAAA,EAAS,CACRC,YAAY,+NACZC,IAAI,MACJC,IAAI,8EAEHC,EAAAA,KAAc,SAAUC,GACvB,OACEb,EAAAA,cAACC,EAAAA,EAAM,CACLa,GAAID,EAAKE,QACTC,cAAe,CACbC,MAAO,SAAU9C,IACf+C,EAAAA,EAAAA,UACE,+BAAiC/C,EAAMgD,OAAOC,QAAQN,GAE1D,GAEFO,IAAKR,EAAKE,QACVjD,SAAU,CAAC+C,EAAKS,QAAQC,OAAQV,EAAKS,QAAQE,SAE7CxB,EAAAA,cAACxC,EAAK,KAAEqD,EAAKY,MAGnB,IAGR,ECjEA,MAQaC,EAAOA,IAAM1B,EAAAA,cAAA,aAAO,kBAEjC,MAVkB2B,IAEd3B,EAAAA,cAAC4B,EAAAA,EAAM,CAACC,UAAU,kBAChB7B,EAAAA,cAAC8B,EAAQ,M","sources":["webpack://hopfenstop/./node_modules/react-leaflet/lib/hooks.js","webpack://hopfenstop/./node_modules/react-leaflet/lib/Popup.js","webpack://hopfenstop/./src/components/kiosk_map_overview.js","webpack://hopfenstop/./src/pages/index.js"],"sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n","import React from 'react';\nimport { Text, useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { marker } from './map.module.css';\n\nimport kioskData from '../data/kiosk_data.json';\nimport L from 'leaflet';\nimport { navigate } from 'gatsby';\nimport { useMapEvents } from 'react-leaflet';\n\n\nconst KioskMap = function(){\n  \n  function LocationMarker() {\n    const [position, setPosition] = useState(null);\n    const [bbox, setBbox] = useState([]);\n\n    const map = useMap();\n\n    useEffect(() => {\n      map.locate().on(\"locationfound\", function (e) {\n        setPosition(e.latlng);\n        map.flyTo(e.latlng, map.getZoom());\n        const radius = e.accuracy;\n        const circle = L.circle(e.latlng, radius);\n        circle.addTo(map);\n        setBbox(e.bounds.toBBoxString().split(\",\"));\n      });\n    }, [map]);\n\n    return position === null ? null : (\n      <Marker position={position}>\n      </Marker>\n    );\n  }\n\n  return(\n    <MapContainer\n      style={{ height: '600px' }}\n      center={[50.1109, 8.6821]}\n      zoom={13}\n      scrollWheelZoom={true}\n    >\n      <LocationMarker />\n      <TileLayer\n        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        ext='png'\n        url='https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.{ext}'\n      />\n        {kioskData.map(function (data) {\n          return (\n            <Marker\n              id={data.kioskId}\n              eventHandlers={{\n                click: function (event) {\n                  navigate(\n                    '/kiosk_detail_view?kiosk_id=' + event.target.options.id\n                  );\n                },\n              }}\n              key={data.kioskId}\n              position={[data.address.geolat, data.address.geolng]}\n            >\n              <Popup>{data.name}</Popup>\n            </Marker>\n          );\n        })}\n    </MapContainer>\n  );\n}\n\nexport default KioskMap;\n","import * as React from 'react'\nimport Layout from '../components/layout'\nimport KioskMap from '../components/kiosk_map_overview'\n\nconst IndexPage = () => {\n  return (\n    <Layout pageTitle=\"HopfenStop PWA\">\n      <KioskMap/>\n    </Layout>\n  )\n}\n\nexport const Head = () => <title>HopfenStop PWA</title>\n\nexport default IndexPage"],"names":["useMap","map","Popup","props","context","popup","overlayContainer","element","position","setOpen","useEffect","instance","onPopupOpen","event","update","onPopupClose","on","popupopen","popupclose","setLatLng","openOn","bindPopup","off","unbindPopup","removeLayer","LocationMarker","setPosition","useState","bbox","setBbox","locate","e","latlng","flyTo","getZoom","radius","accuracy","L","addTo","bounds","toBBoxString","split","React","Marker","MapContainer","style","height","center","zoom","scrollWheelZoom","TileLayer","attribution","ext","url","kioskData","data","id","kioskId","eventHandlers","click","navigate","target","options","key","address","geolat","geolng","name","Head","IndexPage","Layout","pageTitle","KioskMap"],"sourceRoot":""}